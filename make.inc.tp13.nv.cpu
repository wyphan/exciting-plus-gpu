#==============================================================================
# Exciting-Plus make.inc file for wyp-ThinkPad13 with NVIDIA HPC SDK
# Last edited: Dec 24, 2020 (WYP)
#==============================================================================

MAKE = make
COMPILER = nv

# Compiler switch to turn on the preprocessor
CPP_OPTS = -Mpreprocess

# Add your custom preprocessor defines here
CPP_OPTS += -D_DEBUG_megqblh_ # Output debugging info related to genmegqblh

# Common compile time options
F90_OPTS = $(CPP_OPTS)

# Add your common compile time options here
#F90_OPTS += -Minfo=ftn,loop,opt,mp,par,vect # Show optimizer log
F90_OPTS += -Minfo=accel # Show optimizer log only for OpenACC
F90_OPTS += -Mstack_arrays # Use stack instead of heap for automatic arrays

#==============================================================================
# MPI
#==============================================================================

F90 = mpifort
CC  = mpicc
CXX = mpic++
MPI_CPP_OPTS = -D_MPI_
CPP_OPTS += $(MPI_CPP_OPTS)

#==============================================================================
# OpenMP
#==============================================================================

# These are passed at compile time and link time
# Don't forget to `export OMP_STACKSIZE=2G` at runtime
OMP_OPTS = -mp

#==============================================================================
# Serial compiler (for utilities)
#==============================================================================

F90SERIAL = nvfortran
F90_OPTS_SERIAL = $(filter-out $(OMP_OPTS),$(filter-out $(MPI_CPP_OPTS),$(F90_OPTS)))

#==============================================================================
# Compiler and linker options
#==============================================================================

# Debugging
CPP_OPTS += -DEBUG=1
F90_OPTS += -g -Minform=warn
F90_LINK_OPTS = $(F90_OPTS)
EXE_SFX = dbg

# Debugging with extra checks
# (Don't forget to enable core dump generation using `ulimit -c unlimited`)
#CPP_OPTS += -DEBUG=3
#F90_OPTS += -g -O0 -Minform=warn -Mbounds -traceback
#F90_LINK_OPTS = $(F90_OPTS)
#EXE_SFX = dbgchk

# Optimized build with equivalent options to '-O2'
#F90_OPTS += -gopt -O -Mlre -Mvect=simd -Mflushz -Mcache_align -Mnoinline -Minform=warn
#F90_LINK_OPTS = $(F90_OPTS) -fpic
#EXE_SFX = opt

# Profiling
# Note: don't use '-Mpfi', it is incompatible with '-mp' and '-fpic'
#F90_OPTS += -Minstrument -Mprof=ccff -O -Munroll -Mlre -Mflushz -Mcache_align -Mnoinline -Minform=warn
#F90_LINK_OPTS = $(F90_OPTS) -fpic
#EXE_SFX = prof

# Fully optimized build
# Warning: might give incorrect results
#F90_OPTS += -fast -Munroll -Mnoinline -Minform=warn
#F90_LINK_OPTS = $(F90_OPTS) -fpic
#EXE_SFX = fast

# Profiling, fully optimized
#F90_OPTS += -Minstrument -Mprof=ccff -fast -Munroll -Mnoinline -Minform=warn
#F90_LINK_OPTS = $(F90_OPTS) -fPIC
#EXE_SFX = fastprof

#==============================================================================
# BLAS and LAPACK
#==============================================================================

# Use reference BLAS and LAPACK 3.9.0
#REFLAPACK_PATH = /opt/nvlibs
#LAPACK_LIB = -L$(REFLAPACK_PATH)/lib -lblas -llapack

# Use OpenBLAS 0.3.13
#OBLAS_PATH = /opt/nvlibs
#LAPACK_LIB = -L$(OBLAS_PATH)/lib -lopenblas

# Use Intel MKL
# Make sure to `module load mkl`
F90_OPTS += -fortranlibs -I${MKLROOT}/include
LAPACK_LIB = -L${MKLROOT}/lib/intel64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lpthread -lm -ldl

#==============================================================================
# FFTW 3
#==============================================================================

# To disable, comment these three lines
FFT_INC = -I/opt/nvlibs/include
FFT_LIB = -L/opt/nvlibs/lib -lfftw3_omp -lfftw3 -lm
FFT_CPP_OPTS = -D_FFTW3_

CPP_OPTS += $(FFT_CPP_OPTS)
F90_OPTS += $(FFT_INC)

#==============================================================================
# HDF5
#==============================================================================

# To disable, comment these three lines
HDF5_INC = -I/opt/nvlibs/include
HDF5_LIB = -L/opt/nvlibs/lib -lhdf5_fortran -lhdf5_hl -lhdf5 -ldl
HDF5_CPP_OPTS = -D_HDF5_

CPP_OPTS += $(HDF5_CPP_OPTS)
F90_OPTS += $(HDF5_INC)

#==============================================================================
# Silo
#==============================================================================

# These are used for the dx2silo utility
#SILO_INC = -I$/opt/nvlibs/include
#SILO_LIB = -L$/opt/nvlibs/lib -lsilo -lsiloh5 -lm $(HDF5_LIB)

#==============================================================================
# Other libraries (retained here for historical purposes)
#==============================================================================

# ==- compile with libXC support ===
#CPP_OPTS := $(CPP_OPTS) -D_LIBXC_
#XC_LIB =

# ==- compile with NFFT support ===
#CPP_OPTS := $(CPP_OPTS) -D_NFFT_
#NFFT_INC = -I$(HOME)/local/include
#NFFT_LIB = $(HOME)/local/lib/libnfft3.a $(HOME)/local/lib/libfftw3.a

# === compile with Madness API ===
#CPP_OPTS := $(CPP_OPTS) -D_MAD_
#MADNESS_INC = -I$(HOME)/local/include
#MADNESS_LIB = -L$(HOME)/local/lib/ -lMADmra -lMADlinalg -lMADtensor -lMADmisc -lMADmuparser -lMADtinyxml -lMADworld -lmpichcxx -lstdc++

#==============================================================================
# List all libraries to link
#==============================================================================

LIBS = $(LAPACK_LIB) $(FFT_LIB) $(HDF5_LIB)
